library(rowr)
library(rowr)
library(rowr)
library(rowr)
table <- cbind(c(1, 1, 1, 1), c(0, 1, 1, 1), c(0, 0, 0.5, 1))
calculate <- function(n, table) {
result = vector(mode = "integer", length = 2 ** n / 2)
for (current in n:(2 ** n / 2)) {
optimal <- 0
for (i in current %/% 2:(current - 1)) {
sum <- 0
if (i > length(table[, n - 1])) {
sum <- sum + 0.5
} else {
sum <- sum + 0.5 * as.numeric(table[i, n - 1])
}
j = current - i
if (j > length(table[, n - 1])) {
sum <- sum + 0.5
} else {
sum <- sum + 0.5 * as.numeric(table[j, n - 1])
}
if (sum > optimal) {
optimal <- sum
}
if (current > 2 ** (n - 1) / 2 &&
(sum > 0.5 + as.numeric(table[(current - 2 ** (n - 1) / 2), n - 1]))) {
print("UNEXPECTED!")
# print(i)
# print(j)
}
}
result[current] <- optimal
}
return (cbind.fill(table, result, fill = 1))
}
for (i in 1:9) {
table <- calculate(ncol(table) + 1, table)
}
colnames(table) <- 1:ncol(table)
table
View(table)
View(table)
View(table)
write.table(table, file = "benburklevis.csv")
plot(table[,5])
plot(table[1:15,5])
plot(table[1:20,5])
plot(table[1:40,6])
plot(table[1:80,7])
plot(table[1:20,5])
plot(table[1:20,5])
plot(table[1:40,6])
plot(table[1:20,5])
plot(table[1:40,6])
plot(table[1:80,7])
table[1:80,7])/table[7,7])
table[1:80,7])/table[7,7]
table[1:80,7]/table[7,7]
table[1:80,6]/table[6,6]
table[1:80,5]/table[5,5]
table[1:80,4]/table[4,4]
table[1:80,3]/table[3,3]
table[1:80,2]/table[2,2]
table[1:80,1]/table[1,1]
table[1160,8]/table[8,8]
table[160,8]/table[8,8]
table[1:160,8]/table[8,8]
table[,12]
table[,10]
table[1:1000,10]
write.table(table[,12], file = “my_data_quack.txt”, sep = “, ”)
rite.table(table[,12], file = "my_data_quack.txt" sep = ", ")
write.table(table[,12], file = "my_data_quack.txt" sep = ", ")
write.table(table[,12], file = "my_data_quack.txt", sep = ", ")
write.table(table[,12], file = "my_data_quack.txt", sep = ", ", row.names = false)
write.table(table[,12], file = "my_data_quack.txt", sep = ", ", row.names = False)
write.table(table[,12], file = "my_data_quack.txt", sep = ", ", row.names = FALSE)
plot(table[1:80, 6])
plot(table[1:40, 6])
plot(table[1:70, 7])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vector) - 1)) {
if (vect[i] == vect[i+1]) {
result.append(0)
}
else if(vect[i] + increment != vect[i+1]) {
print("UNEXPEDTED")
}
else {
result.append(1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vector) - 1)) {
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vector) - 1)) {
print(vect[i])
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vector) - 1)) {
print(vect[i + 1])
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vector) - 1)) {
print(vect[i + 1])
print(vect[i])
print("next")
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
table[,1]
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vect) - 1)) {
print(vect[i + 1])
print(vect[i])
print("next")
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
}
}
return (result)
}
table[,1]
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vect) - 1)) {
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vect) - 1)) {
if (vect[i] == vect[i + 1]) {
append(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPEDTED")
}
else {
append(result, 1)
print(result)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vect) - 1)) {
if (vect[i] == vect[i + 1]) {
append(result, 0)
print("XXXXX")
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPECTED")
}
else {
append(result, 1)
print("XXXX")
}
}
return (result)
}
generate_vector(table[,1])
generate_vector <- function(vect) {
increment = min(vect)
result <- numeric()
for (i in 1:(length(vect) - 1)) {
if (vect[i] == vect[i + 1]) {
result <- c(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPECTED")
}
else {
result <- c(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector(table[,2])
generate_vector <- function(vect) {
increment = min(vect[vect != 0])
result <- numeric()
for (i in 1:(length(vect) - 1)) {
if (vect[i] == vect[i + 1]) {
result <- c(result, 0)
}
else if (vect[i] + increment != vect[i + 1]) {
print("UNEXPECTED")
}
else {
result <- c(result, 1)
}
}
return (result)
}
generate_vector(table[,1])
generate_vector(table[,2])
generate_vector(table[,3])
generate_vector(table[,4])
generate_vector(table[,5])
generate_vector(table[,6])
generate_vector(table[,7])
generate_vector(table[,7])[1:40]
generate_vector(table[,7])[1:40]
generate_vector(table[, 7])[1:40]
generate_vector(table[, 6])[1:40]
generate_vector(table[, 5])[1:40]
generate_vector(table[, 4])[1:40]
generate_vector(table[, 7])[1:60]
generate_vector(table[, 6])[1:40]
generate_vector(table[, 5])[1:40]
generate_vector(table[, 4])[1:40]
generate_vector(table[, 7])[1:70]
generate_vector(table[, 6])[1:40]
generate_vector(table[, 5])[1:40]
generate_vector(table[, 4])[1:40]
generate_vector(table[, 12])
vector_table <- generate_vector(table[, 12])
rbind(vector_table, generate_vector(table[, 11]))
vector_table <- generate_vector(table[, 12])
vector_table <- rbind(vector_table, generate_vector(table[, 11]))
View(vector_table)
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
vector_table <- rbind(vector_table, generate_vector(table[, i]))
}
View(vector_table)
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
vector_table <- rbind(vector_table, generate_vector(table[, i])[i:])
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
vector_table <- rbind(vector_table, generate_vector(table[, i])[i:])
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])[i:]
vector_table <- rbind(vector_table, current)
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind(vector_table, current)
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind(vector_table, current[i:2048])
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind.fill(vector_table, current[i:2048])
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind(vector_table, current[i:2048],  fill = TRUE)
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind(vector_table, current[i:2048])
}
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind(vector_table, current[i:2048])
}
View(vector_table)
View(vector_table)
plot(table[, 12])
plot(table[, 11])
plot(table[, 10])
plot(table[, 9])
plot(table[, 12])
vector_table <- generate_vector(table[, 1])
for (i in 2:12) {
current <- generate_vector(table[, i])
vector_table <- rbind(vector_table, current[(i-1):2048])
}
